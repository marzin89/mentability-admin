<!-- Namnrymd -->
@using Mentability.Models

<!-- Modell -->
@model NewsArticle;

@{
    // Sidans namn
    ViewData["Title"] = "Admin | Nyheter";
}

<!-- Slumpmässigt genererat citat -->
<partial name="~/Views/Shared/_RandomQuote.cshtml" />
<!-- Logga ut-->
<!--<partial name="~/Views/Shared/_Logout.cshtml" />-->
<!-- Huvudmeny Admin -->
<partial name="~/Views/Shared/_AdminMenu.cshtml" />

<!-- Formulär med validering/felhantering -->
<div class="white-section">
    <form id="admin-news-form" class="admin-form" asp-controller="NewsArticle" asp-action="Create" method="post">
        <!-- Titel -->
        <label asp-for="Title"></label>
        <input asp-for="Title" type="text" class="text-input article-input" aria-required="true" aria-describedby="news-title-error">
        <span asp-validation-for="Title" id="news-title-error" class="error" role="alert"></span>
        <!-- Innehåll -->
        <label asp-for="Content"></label>
        <textarea asp-for="Content" class="text-input textarea article-input" aria-required="true"
            aria-describedby="news-content-error"></textarea>
        <span asp-validation-for="Content" id="news-content-error" class="error" role="alert" class="text-input article-input"></span>
        <!-- Författare -->
        <label asp-for="Author"></label>
        <input asp-for="Author" type="text" class="text-input article-input" aria-required="true" aria-describedby="news-author-error" />
        <span asp-validation-for="Author" id="news-author-error" class="error" role="alert"></span>
        <div>
            <button id="submit-article" type="submit" class="submit">Lägg till</button>
            <button type="reset" class="reset">Rensa</button>
        </div>

        <!-- Här skrivs fel- och bekräftelsemeddelanden ut för lagring, uppdatering och borttagning.
            Status lagras i ViewBag i controllern.-->
        @if (ViewBag.Created != null)
        {
            if (ViewBag.Created)
            {
                <p class="confirm" role="alert">Nyheten har lagts till</p>
            }
            else
            {
                <p class="error" role="alert">Ett serverfel har uppstått. Det gick inte att lägga till nyheten.
                    Försök igen senare.</p>
            }
        }

        @if (ViewBag.Updated != null)
        {
            if (ViewBag.Updated == true)
            {
                <p class="confirm" role="alert">Nyheten har uppdaterats</p>
            }
            else
            {
                <p class="error" role="alert">Ett serverfel har uppstått. Det gick inte att uppdatera nyheten.
                    Försök igen senare.</p>
            }
        }

        @if (ViewBag.Deleted != null)
        {
            if (ViewBag.Deleted)
            {
                <p class="confirm" role="alert">Nyheten har raderats</p>
            }
            else
            {
                <p class="error" role="alert">Ett serverfel har uppstått. Det gick inte att radera nyheten.
                    Försök igen senare.</p>
            }
        }
    </form>
</div>

<!-- Här skrivs befintliga poster ut med länkar för redigering och borttagning -->
<div id="admin-news-section" class="gray-section">
    <section class="admin-output">
        <h2 class="h2-admin-output">Nyheter</h2>
            <!-- Kontrollerar att listan inte är tom -->
            @if (@Model != null)
            {
                // Inläggen lagras i ViewBag så att de går att komma åt i partial-vyn
                ViewBag.Articles = Model.articles;

                /* Om antalet inlägg är högst tre, så skrivs de ut utan att partial-vyn används.
                    Den enda skillnaden är villkoret i loopen (tre eller längden på listan). */
                @if (Model.articles.Count < 3)
                {
                    <div class="row">
                        @for(int i = 0; i < Model.articles.Count; i++)
                        {
                            <article class="news-article">
                                <h3>@Model.articles[i].Title</h3>
                                <p class="date">@Model.articles[i].Date.ToString("dd/MM/yyyy")</p>
                                
                                <!-- Tar bort eventuella blanksteg eftersom de genererar valideringsfel -->
                                @if (Model.articles[i].Content.IndexOf("\r\n") > -1)
                                {
                                    Model.articles[i].Content = Model.articles[i].Content.Replace("\r\n", " ");
                                }

                                <p class="admin-text">@Model.articles[i].Content.Substring(0, 150) ...</p>
                                <p class="author">@Model.articles[i].Author</p>
                                <div>
                                    <p class="edit"><a asp-controller="EditNewsArticle" asp-action="EditNewsArticle" asp-route-id="@Model.articles[i].Id" 
                                            class="edit-link" aria-label="Öppnar formuläret för redigering">✎</a></p>
                                    <p class="delete"><a asp-controller="NewsArticle" asp-action="Delete" asp-route-id="@Model.articles[i].Id" 
                                            class="delete-link" aria-label="Raderar nyheten">🗑</a></p>
                                </div>
                            </article>
                        }
                    </div>
                }
                else if (Model.articles.Count == 3)
                {
                    <div class="row">
                        @for(int i = 0; i < 3; i++)
                        {
                            <article class="news-article">
                                <h3>@Model.articles[i].Title</h3>
                                <p class="date">@Model.articles[i].Date.ToString("dd/MM/yyyy")</p>

                                <!-- Tar bort eventuella blanksteg eftersom de genererar valideringsfel -->
                                @if (Model.articles[i].Content.IndexOf("\r\n") > -1)
                                {
                                    Model.articles[i].Content = Model.articles[i].Content.Replace("\r\n", " ");
                                }

                                <p class="admin-text">@Model.articles[i].Content.Substring(0, 150) ...</p>
                                <p class="author">@Model.articles[i].Author</p>
                                <div>
                                    <p class="edit"><a asp-controller="EditNewsArticle" asp-action="EditNewsArticle" asp-route-id="@Model.articles[i].Id" 
                                            class="edit-link" aria-label="Öppnar formuläret för redigering">✎</a></p>
                                    <p class="delete"><a asp-controller="NewsArticle" asp-action="Delete" asp-route-id="@Model.articles[i].Id" 
                                            class="delete-link" aria-label="Raderar nyheten">🗑</a></p>
                                </div>
                            </article>
                        }
                    </div>
                }
                else
                {    
                    /* Om det finns fler än tre inlägg, skrivs tre inlägg ut om användaren inte har valt "Visa fler" 
                        (lagras i ViewBag i controllern) */
                    if ((int)ViewBag.NumberOfArticles == null)
                    {
                        @for(int i = 0; i < 3; i++)
                        {
                            <article class="news-article">
                                <h3>@Model.articles[i].Title</h3>
                                <p class="date">@Model.articles[i].Date.ToString("dd/MM/yyyy")</p>

                                <!-- Tar bort eventuella blanksteg eftersom de genererar valideringsfel -->
                                @if (Model.articles[i].Content.IndexOf("\r\n") > -1)
                                {
                                    Model.articles[i].Content = Model.articles[i].Content.Replace("\r\n", " ");
                                }

                                <p class="admin-text">@Model.articles[i].Content.Substring(0, 150) ...</p>
                                <p class="author">@Model.articles[i].Author</p>
                                <div>
                                    <p class="edit"><a asp-controller="EditNewsArticle" asp-action="EditNewsArticle" asp-route-id="@Model.articles[i].Id" 
                                            class="edit-link" aria-label="Öppnar formuläret för redigering">✎</a></p>
                                    <p class="delete"><a asp-controller="NewsArticle" asp-action="Delete" asp-route-id="@Model.articles[i].Id" 
                                            class="delete-link" aria-label="Raderar nyheten">🗑</a></p>
                                </div>
                            </article>
                        }
                    }
                    else
                    {
                        /* Om användaren har valt "Visa fler", används antalet kolumner (lagras i ViewBag i controllern) som villkor.
                            Utskrift sker med hjälp av partial-vyn och index uppdateras inför varje iteration så att inga inlägg skrivs ut dubbelt. */
                        int count = 0;
                        int numberOfColumns = (int)ViewBag.NumberOfColumnsArticle;

                        @for(int i = 0; i < numberOfColumns; i++)
                        {
                            ViewBag.ArticleIndex = count;
                            <partial name="~/Views/Shared/_NewsArticleOutput.cshtml" />

                            count += 3;
                        }
                    }                      
                }
            }
            // Om listan är tom, skrivs ett felmeddelande ut
            else
            {
                <p class="error" role="alert">Ett serverfel har uppstått. Det gick inte att hämta nyheter.
                    Försök igen senare.</p>
            }
        <!-- Här väljer användaren att visa fler nyheter. Antalet poster i modellen skickas med som id
            (antalet saknar dock betydelse) -->
        <p class="show-more"><a asp-controller="NewsArticle" asp-action="NewsArticle" asp-route-id="@Model.articles.Count" class="show-more-link">Visa fler</a></p>
    </section>
</div>

<script>
    // Denna kod markerar tomma, obligatoriska inmatningsfält, genererar felmeddelanden och sätter aria-invalid till true/false
    // Inmatningsfält, felmeddelanden och skicka-knapp 
    const articleInputs = document.getElementsByClassName('article-input');
    const errorMessages = document.getElementsByClassName('error');
    const submitArticle = document.getElementById('submit-article');

    // När formuläret skickas, lagras alla inmatningar i webbläsaren samt att formuläret har skickats
    submitArticle.addEventListener('click', () => {
        sessionStorage.setItem('articleSubmitted', true);
        sessionStorage.setItem('articleTitle', articleInputs[0].value);
        sessionStorage.setItem('articleContent', articleInputs[1].value);
        sessionStorage.setItem('articleAuthor', articleInputs[2].value);
    });

    // Koden nedan körs när formuläret har skickats och sidan laddas om
    window.addEventListener('load', () => {
        if (sessionStorage.getItem('articleSubmitted')) {
            /* Om inmatningsfältet är tomt, eller om titeln är kortare än fem tecken,
                ändras klassnamnet, aria-invalid och ett felmeddelande genereras */
            if (!sessionStorage.getItem('articleTitle')) {
                articleInputs[0].className = 'text-input-error article-input';
                articleInputs[0].setAttribute('aria-invalid', true);
                errorMessages[0].innerHTML = 'Du måste ange en titel';
            
            } else {
                if (sessionStorage.getItem('articleTitle').length < 5) {
                    articleInputs[0].className = 'text-input-error article-input';
                    articleInputs[0].setAttribute('aria-invalid', true);
                    errorMessages[0].innerHTML = 'Titeln måste vara minst fem tecken lång';
                
                // Annars återställs aria-invalid och den lagrade titeln skrivs ut i inmatningsfältet
                } else {
                    articleInputs[0].setAttribute('aria-invalid', false);
                    articleInputs[0].value = sessionStorage.getItem('articleTitle');
                }
            }

            /* Om inmatningsfältet är tomt, eller om innehållet är kortare än 300 tecken,
                ändras klassnamnet, aria-invalid och ett felmeddelande genereras */
            if (!sessionStorage.getItem('articleContent')) {
                articleInputs[1].className = 'text-input-error article-input';
                articleInputs[1].setAttribute('aria-invalid', true);
                errorMessages[1].innerHTML = 'Du måste skriva ett innehåll';
            
            } else {
                if (sessionStorage.getItem('articleContent').length < 300) {
                    articleInputs[1].className = 'text-input-error article-input';
                    articleInputs[1].setAttribute('aria-invalid', true);
                    errorMessages[1].innerHTML = 'Inlägget måste vara minst 300 tecken långt';
                
                // Annars återställs aria-invalid och den lagrade texten skrivs ut i inmatningsfältet
                } else {
                    articleInputs[1].setAttribute('aria-invalid', false);
                    articleInputs[1].value = sessionStorage.getItem('articleContent');
                }
            }

            // Om inmatningsfältet är tomt, ändras klassnamnet, aria-invalid och ett felmeddelande genereras
            if (!sessionStorage.getItem('articleAuthor')) {
                articleInputs[2].className = 'text-input-error article-input';
                articleInputs[2].setAttribute('aria-invalid', true);
                errorMessages[2].innerHTML = 'Du måste ange en författare';
            
            // Annars återställs aria-invalid och den lagrade författaren skrivs ut i inmatningsfältet
            } else {
                articleInputs[2].setAttribute('aria-invalid', false);
                articleInputs[2].value = sessionStorage.getItem('articleAuthor');
            }
        }
    })
</script>



